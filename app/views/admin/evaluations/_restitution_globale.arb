# frozen_string_literal: true

marges_generales = 'mx-5'
niveaux_competences = restitution_globale.niveaux_competences

div class: 'admin_restitution_globale' do
  if auto_positionnement
    render 'entete_page', restitution_globale: restitution_globale, pdf: pdf

    div class: marges_generales do
      div class: 'saut-de-page' do
        render partial: 'autopositionnement', locals: { auto_positionnement: auto_positionnement }
      end
    end
  end

  hr unless pdf

  render 'entete_page', restitution_globale: restitution_globale, pdf: pdf

  div class: marges_generales do
    div class: 'text-center my-5' do
      h2 t('.competences_fortes_titre')
      para class: 'legende-titre' do
        t('.legende_titre')
      end
    end

    div class: 'row saut-de-page' do
      div class: 'col' do
        div md t('.competences_fortes_vides') if niveaux_competences.blank?

        interpretations = restitution_globale.interpretations_competences_transversales
        interpretations.each do |competence, interpretation|
          div class: 'competence-transversale' do
            div class: 'jauge'
            div class: "jauge remplissage remplissage-#{interpretation}"
            if pdf
              span class: 'image-competence' do
                wicked_pdf_image_tag "#{competence}.svg"
              end
            else
              span class: 'image-competence' do
                image_tag "#{competence}.svg"
              end
            end
            div class: 'informations-competence' do
              h2 t("#{competence}.nom", scope: 'admin.evaluations.restitution_competence'),
                 class: 'nom-competence'
              div class: 'description-competence' do
                div md t("#{competence}.stanine#{interpretation}",
                         scope: 'admin.evaluations.restitution_competence')
                url_competence = "#{URL_COMPETENCES_SITE_VITRINE}#{competence}/"
                a href: url_competence, target: '_blank' do
                  t('.url_competence', url: url_competence)
                end
              end
            end
          end
        end
      end
    end
  end

  hr unless pdf

  div class: 'saut-de-page' do
    render 'entete_page', restitution_globale: restitution_globale, pdf: pdf

    div class: marges_generales do
      div class: 'synthese-illettrisme' do
        if restitution_globale.interpretations_niveau1.size == 1
          render 'litteratie_numeratie_synthese_unique',
                 interpretation: restitution_globale.interpretations_niveau1[0],
                 pdf: pdf
        else
          render 'litteratie_numeratie_syntheses_separees',
                 interpretations: restitution_globale.interpretations_niveau1,
                 pdf: pdf
        end
      end

      div class: 'row mb-4' do
        div class: 'col' do
          render 'metacompetences', categorie: :litteratie
        end
        div class: 'col' do
          render 'metacompetences', categorie: :numeratie
        end
      end
    end
  end

  mes_avec_redaction_de_notes = restitution_globale.restitutions.select do |restitution|
    %w[questions livraison].include?(restitution.situation.nom_technique)
  end
  unless mes_avec_redaction_de_notes.empty?
    render 'entete_page', restitution_globale: restitution_globale, pdf: pdf
    div class: marges_generales do
      mes_avec_redaction_de_notes.each do |restitution|
        situation = restitution.situation

        render 'questions', { restitution: restitution, situation_libelle: situation.libelle }
      end
    end
  end
end

if can?(:manage, Compte) && !pdf
  tabs do
    tab 'Scores litteratie et numératie' do
      scores_niveau1 = restitution_globale.scores_niveau1.calcule
      moyennes_glissantes = restitution_globale.niveau1_moyennes_glissantes
      ecarts_types_glissants = restitution_globale.niveau1_ecarts_types_glissants
      scores_niveau1_standardises = restitution_globale.scores_niveau1_standardises.calcule
      attributes_table_for [
        [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau1],
        [t('admin.restitutions.restitution_colonnes.moyenne_glissante'), moyennes_glissantes],
        [t('admin.restitutions.restitution_colonnes.ecart_type_glissant'), ecarts_types_glissants],
        [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau1_standardises]
      ] do
        row do |(titre, _)|
          strong titre
        end
        scores_niveau1.each_key do |nom_metrique|
          row(nom_metrique) do |(_, valeur_colonne)|
            valeur_colonne[nom_metrique]&.round(2)
          end
        end
      end
    end

    tab 'Scores meta-compétences' do
      scores_niveau2 = restitution_globale.scores_niveau2.calcule
      moyennes_glissantes = restitution_globale.niveau2_moyennes_glissantes
      ecarts_types_glissants = restitution_globale.niveau2_ecarts_types_glissants
      scores_niveau2_standardises = restitution_globale.scores_niveau2_standardises.calcule
      attributes_table_for [
        [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau2],
        [t('admin.restitutions.restitution_colonnes.moyenne_glissante'), moyennes_glissantes],
        [t('admin.restitutions.restitution_colonnes.ecart_type_glissant'), ecarts_types_glissants],
        [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau2_standardises]
      ] do
        row do |(titre, _)|
          strong titre
        end
        Restitution::ScoresNiveau2::METRIQUES_ILLETRISME.each do |nom_metrique|
          row(nom_metrique) do |(_, valeur_colonne)|
            valeur_colonne[nom_metrique]&.round(2)
          end
        end
      end
    end

    tab 'Niveaux compétences transversales' do
      ol do
        niveaux_competences.each do |competence, niveau|
          li span t("#{competence}.nom",
                    scope: 'admin.evaluations.restitution_competence') +
                  ": #{niveau}"
        end
      end
    end
  end
end
