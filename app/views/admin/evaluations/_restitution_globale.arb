# frozen_string_literal: true

niveaux_competences = restitution_globale.niveaux_competences

div class: 'admin_restitution_globale' do
  if auto_positionnement
    div id: 'auto_positionnement', class: 'page' do
      render 'entete_page', restitution_globale: restitution_globale

      if pdf
        h2 t('.autopositionnement_titre'), class: 'text-center mt-5 mb-4'
      else
        h2 t('.autopositionnement_titre')
      end

      div class: 'panel' do
        div class: 'marges-page' do
          render partial: 'autopositionnement', locals: { auto_positionnement: auto_positionnement }
        end

        render 'pied_page'
      end
    end
  end

  div id: 'competences_transversales', class: 'page' do
    render 'entete_page', restitution_globale: restitution_globale

    if pdf
      h2 t('.competences_fortes_titre'), class: 'text-center my-5'
    else
      h2 t('.competences_fortes_titre')
    end

    div class: 'panel' do
      div class: 'marges-page' do
        div class: 'row' do
          div class: 'col' do
            if niveaux_competences.blank?
              div class: 'competences-transversales-vides' do
                md t('.competences_fortes_vides')
              end
            end

            interpretations = restitution_globale.interpretations_competences_transversales
            interpretations.each do |competence, interpretation|
              div class: 'competence-transversale' do
                div class: 'conteneur-jauge' do
                  div class: 'jauge'
                  div class: "jauge remplissage remplissage-#{interpretation}"
                end
                span class: 'image-competence' do
                  if pdf
                    svg_tag_base64 "#{competence}.svg"
                  else
                    image_tag "#{competence}.svg"
                  end
                end
                div class: 'informations-competence' do
                  h2 t("#{competence}.nom", scope: 'admin.evaluations.restitution_competence'),
                     class: 'nom-competence'
                  div class: 'description-competence' do
                    div md t("#{competence}.stanine#{interpretation}",
                             scope: 'admin.evaluations.restitution_competence')
                    div class: 'lien-metier' do
                      if pdf
                        text_node svg_tag_base64 'lien.svg', class: 'image-lien'
                      else
                        text_node image_tag 'lien.svg', class: 'image-lien'
                      end
                      span class: 'align-middle' do
                        text_node t('.etiquette_lien_metiers')
                        url_competence = "#{URL_COMPETENCES_SITE_VITRINE}#{competence}/"
                        a href: url_competence, target: '_blank' do
                          url_competence
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end

      render 'pied_page'
    end
  end

  if pdf
    div class: 'page' do
      render 'entete_page', restitution_globale: restitution_globale

      h2 t('titre', scope: 'admin.restitutions.cefr'), class: 'text-center mt-5 mb-4'

      div class: 'panel' do
        render 'francais_mathematique', pdf: pdf
      end

      render 'pied_page', avant_pied_page: 'references_restitution_illettrisme'
    end

    if mes_avec_redaction_de_notes.present?
      div class: 'page' do
        render 'entete_page', restitution_globale: restitution_globale

        render 'communication_ecrite', restitution_globale: restitution_globale, pdf: pdf

        render 'pied_page'
      end
    end
  else
    div id: 'francais_mathematiques', class: 'page' do
      h2 t('titre', scope: 'admin.restitutions.cefr')

      div class: 'panel panel--avec-references' do
        render 'francais_mathematique', pdf: pdf

        render 'communication_ecrite', restitution_globale: restitution_globale, pdf: pdf

        render 'references_restitution_illettrisme'
      end
    end
  end

  render partial: 'correspondance_anlci',
         locals: {
           restitution_globale: restitution_globale,
           pdf: pdf
         }
end

if can?(:manage, Compte) && !pdf
  div class: 'admin-scores panel' do
    tabs do
      tab 'Scores litteratie et numératie' do
        scores_niveau1 = restitution_globale.scores_niveau1.calcule
        moyennes = restitution_globale.niveau1_moyennes_metriques
        ecarts_types = restitution_globale.niveau1_ecarts_types_metriques
        scores_niveau1_standardises = restitution_globale.scores_niveau1_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau1],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau1_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          scores_niveau1.each_key do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Scores meta-compétences' do
        scores_niveau2 = restitution_globale.scores_niveau2.calcule
        moyennes = restitution_globale.niveau2_moyennes_metriques
        ecarts_types = restitution_globale.niveau2_ecarts_types_metriques
        scores_niveau2_standardises = restitution_globale.scores_niveau2_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau2],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau2_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          Restitution::ScoresNiveau2::METRIQUES_ILLETRISME.each do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Niveaux compétences transversales' do
        ol do
          niveaux_competences.each do |competence, niveau|
            li span t("#{competence}.nom",
                      scope: 'admin.evaluations.restitution_competence') +
                    ": #{niveau}"
          end
        end
      end
    end
  end
end
