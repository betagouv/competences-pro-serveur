# frozen_string_literal: true

niveaux_competences = restitution_globale.niveaux_competences

div class: 'admin_restitution_globale' do
  if auto_positionnement
    div class: 'page' do
      render 'entete_page', restitution_globale: restitution_globale

      div class: 'marges-page' do
        render partial: 'autopositionnement', locals: { auto_positionnement: auto_positionnement }
      end

      render 'pied_page'
    end
  end

  div class: 'page' do
    render 'entete_page', restitution_globale: restitution_globale

    div class: 'marges-page' do
      div class: 'text-center my-5' do
        h2 t('.competences_fortes_titre')
        para class: 'legende-titre' do
          t('.legende_titre')
        end
      end

      div class: 'row mb-5' do
        div class: 'col' do
          if niveaux_competences.blank?
            div class: 'competences-transversales-vides' do
              md t('.competences_fortes_vides')
            end
          end

          interpretations = restitution_globale.interpretations_competences_transversales
          interpretations.each do |competence, interpretation|
            div class: 'competence-transversale' do
              div class: 'conteneur-jauge' do
                div class: 'jauge'
                div class: "jauge remplissage remplissage-#{interpretation}"
              end
              span class: 'image-competence' do
                if pdf
                  svg_tag_base64 "#{competence}.svg"
                else
                  image_tag "#{competence}.svg"
                end
              end
              div class: 'informations-competence' do
                h2 t("#{competence}.nom", scope: 'admin.evaluations.restitution_competence'),
                   class: 'nom-competence'
                div class: 'description-competence' do
                  div md t("#{competence}.stanine#{interpretation}",
                           scope: 'admin.evaluations.restitution_competence')
                  div class: 'lien-metier' do
                    span class: 'image-lien' do
                      if pdf
                        svg_tag_base64 'lien.svg'
                      else
                        image_tag 'lien.svg'
                      end
                    end
                    span t('.etiquette_lien_metiers'), class: 'align-middle'
                    url_competence = "#{URL_COMPETENCES_SITE_VITRINE}#{competence}/"
                    a href: url_competence, target: '_blank', class: 'align-middle' do
                      url_competence
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

    render 'pied_page'
  end

  div class: 'page' do
    render 'entete_page', restitution_globale: restitution_globale

    div class: 'marges-page' do
      h2 class: 'text-center my-4' do
        span t('titre', scope: 'admin.restitutions.niveaux_illettrisme')
      end

      render 'litteratie_numeratie_synthese',
             synthese: restitution_globale.synthese,
             pdf: pdf

      render 'litteratie_numeratie_niveau1',
             interpretations: restitution_globale.interpretations_niveau1,
             pdf: pdf

      div class: 'row my-4' do
        div class: 'col-auto badge' do
          img # place holder
        end
        div class: 'col' do
          render 'metacompetences', categorie: :litteratie
        end
        div class: 'col-auto badge' do
          img # place holder
        end
        div class: 'col' do
          render 'metacompetences', categorie: :numeratie
        end
      end
    end

    render 'references_restitution_illettrisme' unless pdf

    render 'pied_page', avant_pied_page: 'references_restitution_illettrisme'
  end

  mes_avec_redaction_de_notes = restitution_globale.restitutions.select do |restitution|
    %w[questions livraison].include?(restitution.situation.nom_technique)
  end
  unless mes_avec_redaction_de_notes.empty?
    div class: 'page' do
      render 'entete_page', restitution_globale: restitution_globale

      h2 class: 'text-center my-5' do
        span t('titre', scope: 'admin.restitutions.niveaux_illettrisme')
      end

      div class: 'marges-page mt-4' do
        mes_avec_redaction_de_notes.each do |restitution|
          situation = restitution.situation

          render 'questions', {
            restitution: restitution,
            situation_libelle: situation.libelle,
            pdf: pdf
          }
        end
      end

      render 'pied_page'
    end
  end
end

if can?(:manage, Compte) && !pdf
  div class: 'admin-scores' do
    tabs do
      tab 'Scores litteratie et numératie' do
        scores_niveau1 = restitution_globale.scores_niveau1.calcule
        moyennes = restitution_globale.niveau1_moyennes_metriques
        ecarts_types = restitution_globale.niveau1_ecarts_types_metriques
        scores_niveau1_standardises = restitution_globale.scores_niveau1_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau1],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau1_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          scores_niveau1.each_key do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Scores meta-compétences' do
        scores_niveau2 = restitution_globale.scores_niveau2.calcule
        moyennes = restitution_globale.niveau2_moyennes_metriques
        ecarts_types = restitution_globale.niveau2_ecarts_types_metriques
        scores_niveau2_standardises = restitution_globale.scores_niveau2_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau2],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau2_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          Restitution::ScoresNiveau2::METRIQUES_ILLETRISME.each do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Niveaux compétences transversales' do
        ol do
          niveaux_competences.each do |competence, niveau|
            li span t("#{competence}.nom",
                      scope: 'admin.evaluations.restitution_competence') +
                    ": #{niveau}"
          end
        end
      end
    end
  end
end
